name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  test:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: ./web-page-automatization/package-lock.json

    - name: Install dependencies
      working-directory: ./web-page-automatization
      run: npm ci

    - name: Install Playwright Browsers
      working-directory: ./web-page-automatization
      run: npx playwright install --with-deps chromium

    - name: Run Component Tests
      working-directory: ./web-page-automatization
      run: npx playwright test tests/component --reporter=html
      continue-on-error: false

    - name: Run E2E Tests
      working-directory: ./web-page-automatization
      run: npx playwright test tests/e2e-user-flow --reporter=html
      continue-on-error: false

    - name: Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: web-page-automatization/playwright-report/
        retention-days: 30

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: web-page-automatization/test-results/
        retention-days: 30

  notify:
    needs: test
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check test results
      run: |
        echo "Test job completed with status: ${{ needs.test.result }}"
        
    - name: Send notification (fake)
      run: |
        echo "================================================"
        echo "         TEST EXECUTION SUMMARY"
        echo "================================================"
        echo "Status: ${{ needs.test.result }}"
        echo "Workflow: ${{ github.workflow }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"
        echo "================================================"
        
    - name: Generate test summary (fake)
      run: |
        echo "Generating test summary report..."
        echo "Component tests: COMPLETED"
        echo "E2E tests: COMPLETED"
        echo "Report available in artifacts"

